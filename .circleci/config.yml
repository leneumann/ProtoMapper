version: 2.1

executors:
  my-executor:
    docker:
      - image: microsoft/dotnet:sdk
    working_directory: ~/project
    
jobs:
  build:
    executor: my-executor
    steps:
      - checkout
      - run: dotnet restore
      - run: dotnet build ${PROJECT_NAME}.sln
      - persist_to_workspace:
          root: ~/project
          paths:
            - .
  test:
    executor: my-executor
    steps:
      - attach_workspace:
          at: ~/project
      - run: dotnet test "--logger:junit;LogFilePath=./test-reports/results.xml" /p:Include="[${PROJECT_NAME}*]*" /p:CollectCoverage=true /p:CoverletOutputFormat=opencover /p:Thereshold=${MINIMUM_COVERAGE} /p:CoverletOutput="../coverage.xml"
      - run: curl -s https://codecov.io/bash > codecov
      - run: chmod +x codecov
      - run: ./codecov -f "coverage.xml" -t $CODECOV_TOKEN
  deploy:
    executor: my-executor
    steps:
      - attach_workspace:
          at: ~/project
      - run: export VERSION=1.0.$CIRCLE_BUILD_NUM
      - run:
            command: |
                echo 'export VERSION="1.0.$CIRCLE_BUILD_NUM"' >> $BASH_ENV
      - run: dotnet pack --output nupkgs -p:PackageVersion=$VERSION
      - run: curl -F package=@/root/project/src/${PROJECT_NAME}/nupkgs/${PROJECT_NAME}.${VERSION}.nupkg https://${GEM_FURY_PUSH_TOKEN}@push.fury.io/${GEM_FURY_ACCOUNT}/
      - run: dotnet nuget push @/root/project/src/${PROJECT_NAME}/nupkgs/${PROJECT_NAME}.${VERSION}.nupkg -k oy2ftnt5hezojc6us5gqfrvzti467l6ufmocjpi2ntnevy

workflows:
  version: 2
  build-test-and-deploy:
    jobs:
      - build
      - test:
          requires:
            - build
      - deploy:
          requires:
            - test
          filters:
            branches:
              only:
                - master